{"version":3,"sources":["logo.svg","components/Wrapper/Wrapper.js","components/Header/Header.js","components/Description/Description.js","components/Character/Character.js","components/Play/Play.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","props","react_default","a","createElement","className","children","Header","state","win","lose","handleIncrementWin","_this","setState","handleIncrementLose","console","log","href","id","this","React","Component","Description","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","click","parentMethod","onClick","Character","alt","name","src","image","Play","characters","myCharacters","play","starting","tempCharac","length","randomN","Math","floor","random","indexOf","push","character","App","showResults","flip","clicked","alert","_this2","components_Header_Header","components_Description_Description","components_Wrapper_Wrapper","map","components_Character_Character","components_Play_Play","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c319562.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\n\r\n// By extending the React.Component class, Counter inherits functionality from it\r\nclass Header extends React.Component {\r\n    // Setting the initial state of the Counter component\r\n    state = {\r\n        win: 0,\r\n        lose: 0\r\n    };\r\n\r\n    // handleIncrement increases this.state.count by 1\r\n    handleIncrementWin = () => {\r\n        // We always use the setState method to update a component's state\r\n        this.setState({ win: this.state.win + 1 });\r\n    };\r\n\r\n    // handleDecrement decreases this.state.count by 1\r\n    handleIncrementLose = () => {\r\n        // We always use the setState method to update a component's state\r\n        this.setState({ lose: this.state.lose - 1 });\r\n    };\r\n\r\n    // The render method returns the JSX that should be rendered\r\n    render(props) {\r\n        console.log(props)\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n                    <div className=\"container\">\r\n                        <a className=\"navbar-brand\" href=\"#\">Test Your Memory</a>\r\n\r\n                        <div className=\"navbar-nav ml-auto\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\">Win: {this.props.win}</a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a className=\"nav-link\" href=\"#\">Lose: {this.props.lose}</a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./Description.css\";\r\nimport App from \"../../App\"\r\n\r\nfunction handleClick(e) {\r\n    e.preventDefault();\r\n    console.log('The link was clicked.');\r\n}\r\n\r\nclass Description extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n\r\n    click = () => {\r\n        this.props.parentMethod();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\" id=\"box\">\r\n                    <h4>Are you ready to test your memory!</h4>\r\n                    <hr />\r\n                    <p>Try to memorize where is every character, take your time and then click Play.</p>\r\n                    <button className=\"btn btn-primary\" onClick={this.click}>Play</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Description;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./Character.css\";\r\n\r\nconst Character = props => (\r\n  <div className=\"card\">\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n    <div className=\"content\">\r\n      <ul>\r\n        <li>\r\n          <strong>Name:</strong> {props.name}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport \"./Play.css\";\r\n\r\n\r\n// By extending the React.Component class, Counter inherits functionality from it\r\nclass Play extends React.Component {\r\n    \r\n\r\n    // The render method returns the JSX that should be rendered\r\n    render(props) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-8\">\r\n                            <h3>Click on the card where you see: {this.props.name}</h3>\r\n                        </div>\r\n                        <div className=\"col-lg-4\">\r\n                            <img id=\"play-character\" src={this.props.image} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Play;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Wrapper from \"./components/Wrapper\";\nimport Header from './components/Header/Header'\nimport Description from './components/Description/Description'\nimport Character from './components/Character/Character'\nimport Play from './components/Play/Play'\nimport character from \"./character.json\";\n\nlet characters = [];\nlet myCharacters = [];\nlet play = 0;\n\nfunction starting() {  \n  let tempCharac = {}\n  characters = []\n  myCharacters = []\n  play = 0\n  while (characters.length < 5) {\n    var randomN = Math.floor(Math.random() * 13);\n    if (characters.indexOf(randomN) < 0) {\n      characters.push(randomN);\n\n      tempCharac = {\n        id: character[randomN].id,\n        name: character[randomN].name,\n        image: character[randomN].image\n      }\n      myCharacters.push(tempCharac);      \n    }\n  }\n};\n\nclass App extends Component {\n\n  state = {\n    win: 0,\n    lose: 0,\n    myCharacters: myCharacters,\n    showResults: true\n  };\n\n  constructor(props) {\n    starting()\n    super(props)\n  }  \n\n  flip = () => {\n    this.setState({ showResults: false });\n    play = Math.floor(Math.random() * 5);\n    console.log('Play: ' + play)\n  };\n\n  clicked = (id) => {  \n    if (myCharacters[play].id == id) {\n      starting();\n      this.setState({ win: this.state.win + 1, showResults: true, myCharacters: myCharacters })      \n      alert('Congratulation. You win!!')      \n    } else {\n      starting();\n      this.setState({ lose: this.state.lose + 1, showResults: true,  myCharacters: myCharacters })\n      alert('Sorry you lose. Try again!')      \n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header win={this.state.win} lose={this.state.lose} />\n        <Description parentMethod={this.flip} />\n\n        <Wrapper >\n          {this.state.showResults ?\n\n            this.state.myCharacters.map(character => (\n              <Character\n                id={character.id}\n                name={character.name}\n                image={character.image}\n              />\n            ))\n            :\n            this.state.myCharacters.map(character => (\n              <div onClick={() => { this.clicked(character.id) }}>\n                <Character\n                  id={character.id}\n                  name=\"Guess\"\n                  image=\"assets/images/question.png\"\n                />\n              </div>\n            ))\n          }\n        </Wrapper>\n\n        {this.state.showResults ? null : <Play name={myCharacters[play].name} image={myCharacters[play].image}/> }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}